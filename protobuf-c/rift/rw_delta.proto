/*
 * Copyright 2016 RIFT.IO Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @file rw_delta.proto
 * @author Sujithra Periasamy
 * @date 2015/08/13
 * @brief RiftWare Delta Support
 *
 */

message RwDeltaRepeatedLeaf {
  optional uint32 tag = 1;
  oneof value {
    int32    v_int32    = 2;
    sint32   v_sint32   = 3;
    sfixed32 v_sfixed32 = 4;
    int64    v_int64    = 5; 
    sint64   v_sint64   = 6;
    sfixed64 v_sfixed64 = 7;
    uint32   v_uint32   = 8;
    fixed32  v_fixed32  = 9;
    uint64   v_uint64   = 10;
    fixed64  v_fixed64  = 11;
    float    v_float    = 12;
    double   v_double   = 13;
    bool     v_bool     = 14;
    int32    v_enum     = 15;
    string   v_string   = 16;
    bytes    v_bytes    = 17;
  }
}

message RwDeltaUnknown {
  optional uint32 tag        = 1;
  optional uint32 wire_type  = 2;
  optional bytes  data       = 3;
}

message RwDeltaDelete {
  optional bool me                             = 1;
  optional uint32 child_tag                    = 2;
  repeated RwDeltaUnknown unknown              = 3;
  repeated RwDeltaRepeatedLeaf repeated_scalar = 4;
}

message RwDeltaCreate {
  optional bool me                             = 1;
  optional uint32 leaf_tag                     = 2;
  repeated RwDeltaUnknown unknown              = 3;
  repeated RwDeltaRepeatedLeaf repeated_scalar = 4;
}

message RwDeltaMeta {
  optional RwDeltaDelete del    = 1;
  optional RwDeltaCreate create = 2;
}
